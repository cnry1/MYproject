关于跨域问题 。springboot 中配置方式:

CROS跨域常用header
Access-Control-Allow-Origin: 允许哪些ip或域名可以跨域访问
Access-Control-Max-Age: 表示在多少秒之内不需要重复校验该请求的跨域访问权限
Access-Control-Allow-Methods: 表示允许跨域请求的HTTP方法，如：GET,POST,PUT,DELETE
Access-Control-Allow-Headers: 表示访问请求中允许携带哪些Header信息，如：Accept、Accept-Language、Content-Language、Content-Type

方法一：
@Configuration
    public class GlobalCorsConfig {
        @Bean
        public CorsFilter corsFilter() {

            CorsConfiguration config = new CorsConfiguration();
            //开放哪些ip、端口、域名的访问权限，星号表示开放所有域
            config.addAllowedOrigin("*");
            //是否允许发送Cookie信息
            config.setAllowCredentials(true);
            //开放哪些Http方法，允许跨域访问
            config.addAllowedMethod("GET","POST", "PUT", "DELETE");
            //允许HTTP请求中的携带哪些Header信息
            config.addAllowedHeader("*");
            //暴露哪些头部信息（因为跨域访问默认不能获取全部头部信息）
            config.addExposedHeader("*");

            //添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置
            UrlBasedCorsConfigurationSource configSource = new UrlBasedCorsConfigurationSource();
            configSource.registerCorsConfiguration("/**", config);

            return new CorsFilter(configSource);
        }
    }L

    方法二：

        @Configuration
        public class GlobalCorsConfig {
            @Bean
            public WebMvcConfigurer corsConfigurer() {
                return new WebMvcConfigurer() {
                    @Override
                    public void addCorsMappings(CorsRegistry registry) {
                        registry.addMapping("/**")    //添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置
                                .allowedOrigins("*")    //开放哪些ip、端口、域名的访问权限
                                .allowCredentials(true)  //是否允许发送Cookie信息
                                .allowedMethods("GET","POST", "PUT", "DELETE")     //开放哪些Http方法，允许跨域访问
                                .allowedHeaders("*")     //允许HTTP请求中的携带哪些Header信息
                                .exposedHeaders("*");   //暴露哪些头部信息（因为跨域访问默认不能获取全部头部信息）
                    }
                };
            }
        }



        方式三：

         $.ajax({
                    url: 'http://localhost:8090/cors',
                    type: "POST",
                    xhrFields: {
                       withCredentials: true    //允许发送Cookie信息
                    },
                    success: function (data) {
                        alert("跨域请求配置成功")
                    },
                    error: function (data) {
                        alert("跨域请求配置失败")
                    }
                })